{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": None,
   "id": "987ff5ec-6245-457d-895f-c2ff10a445a3",
   "metadata": {},
   "outputs": [],
   "source": [
    "import streamlit as st\n",
    "import pickle\n",
    "import numpy as np\n",
    "\n",
    "# Load the model\n",
    "with open('cardiovascular_disease_model.pkl', 'rb') as file:\n",
    "    model = pickle.load(file)\n",
    "\n",
    "st.title(\"ðŸ«€ Cardiovascular Disease Predictor\")\n",
    "\n",
    "# Collect input\n",
    "age = st.slider(\"Age\", 20, 80, 30)\n",
    "sex = st.selectbox(\"Sex\", [\"Male\", \"Female\"])\n",
    "sex = 1 if sex == \"Male\" else 0\n",
    "\n",
    "chest_pain = st.selectbox(\"Chest Pain Type\", [\n",
    "    \"Typical Angina\", \"Atypical Angina\", \"Non-anginal Pain\", \"Asymptomatic\"\n",
    "])\n",
    "chest_pain_dict = {\n",
    "    \"Typical Angina\": 0,\n",
    "    \"Atypical Angina\": 1,\n",
    "    \"Non-anginal Pain\": 2,\n",
    "    \"Asymptomatic\": 3\n",
    "}\n",
    "chest_pain = chest_pain_dict[chest_pain]\n",
    "\n",
    "resting_bp = st.number_input(\"Resting Blood Pressure (mm Hg)\", min_value=80, max_value=200, value=120)\n",
    "\n",
    "cholesterol = st.selectbox(\"Cholesterol Level\", [\n",
    "    \"Normal (<200)\", \"Borderline High (200-239)\", \"High (â‰¥240)\"\n",
    "])\n",
    "cholesterol_dict = {\n",
    "    \"Normal (<200)\": 1,\n",
    "    \"Borderline High (200-239)\": 2,\n",
    "    \"High (â‰¥240)\": 3\n",
    "}\n",
    "cholesterol = cholesterol_dict[cholesterol]\n",
    "\n",
    "fasting_bs = st.selectbox(\"Fasting Blood Sugar > 120 mg/dl?\", [\"No\", \"Yes\"])\n",
    "fasting_bs = 1 if fasting_bs == \"Yes\" else 0\n",
    "\n",
    "resting_ecg = st.selectbox(\"Resting ECG Results\", [\n",
    "    \"Normal\", \"ST-T Wave Abnormality\", \"Left Ventricular Hypertrophy\"\n",
    "])\n",
    "resting_ecg_dict = {\n",
    "    \"Normal\": 0,\n",
    "    \"ST-T Wave Abnormality\": 1,\n",
    "    \"Left Ventricular Hypertrophy\": 2\n",
    "}\n",
    "resting_ecg = resting_ecg_dict[resting_ecg]\n",
    "\n",
    "max_hr = st.number_input(\"Maximum Heart Rate Achieved\", min_value=60, max_value=220, value=150)\n",
    "\n",
    "exercise_angina = st.selectbox(\"Exercise-Induced Angina?\", [\"No\", \"Yes\"])\n",
    "exercise_angina = 1 if exercise_angina == \"Yes\" else 0\n",
    "\n",
    "oldpeak = st.number_input(\"Oldpeak (ST depression)\", min_value=0.0, max_value=6.0, value=1.0, step=0.1)\n",
    "\n",
    "st_slope = st.selectbox(\"ST Slope\", [\"Upsloping\", \"Flat\", \"Downsloping\"])\n",
    "st_slope_dict = {\n",
    "    \"Upsloping\": 0,\n",
    "    \"Flat\": 1,\n",
    "    \"Downsloping\": 2\n",
    "}\n",
    "st_slope = st_slope_dict[st_slope]\n",
    "\n",
    "# Predict\n",
    "if st.button(\"Predict\"):\n",
    "    input_data = np.array([[age, sex, chest_pain, resting_bp, cholesterol,\n",
    "                            fasting_bs, resting_ecg, max_hr, exercise_angina,\n",
    "                            oldpeak, st_slope]])\n",
    "    \n",
    "    prediction = model.predict(input_data)\n",
    "    \n",
    "    st.success(\"âœ… Cardiovascular Disease Risk: \" + (\"Yes\" if prediction[0] == 1 else \"No\"))\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
